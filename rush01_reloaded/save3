/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: lmeyer <marvin@42.fr>                      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2016/07/17 00:12:41 by lmeyer            #+#    #+#             */
/*   Updated: 2016/07/17 11:31:55 by lmeyer           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft.h"
#include "ft_sudoku.h"

int		ft_valid_params(int ac, char **av)
{
	int i;
	int j;

	if (ac != 10)
		return (0);
	i = 1;
	while (i < 10)
	{
		if (ft_strlen(av[i]) != 9)
			return (0);
		j = 0;
		while (av[i][j] != '\0')
		{
			if (av[i][j] != '.' && (av[i][j] < '1' || av[i][j] > '9'))
				return (0);
			j++;
		}
		i++;
	}
	return (1);
}

int		*ft_argstol(char **av)
{
	int		i;
	int		j;
	int		*dest;

	i = 1;
	dest = (int *)malloc(81 * sizeof(int));
	while (i <= 9)
	{
		j = 0;
		while (av[i][j] != '\0')
		{
			if (av[i][j] == '.')
				*(dest + 9 * (i - 1) + j) = 0;
			else
				*(dest + 9 * (i - 1) + j) = av[i][j] - '0';
			j++;
		}
		i++;
	}
	return (dest);
}

void	ft_print_sudoku(int* line)
{
	int i;

	if (line == 0)
		return ;
	i = 0;
	while (i < 81)
	{
		ft_putnbr(line[i]);
		i++;
	}
}

int		ft_check_dup_line(int *tab, int pos, int val)
{
	int line;
	int i;

	line = pos / 9;
	i = 0;
	while (i < 81)
	{
		if (i / 9 == line && tab[i] == val)
			return (1);
		i++;
	}
	return (0);
}

int		ft_check_dup_col(int *tab, int pos, int val)
{
	int col;
	int i;

	col = pos % 9;
	i = 0;
	while (i < 81)
	{
		if (i % 9 == col && tab[i] == val)
			return (1);
		i++;
	}
	return (0);
}

int		ft_check_dup_block(int *tab, int pos, int val)
{
	int i;
	int block;
	int line;
	int col;

	line = pos / 9;
	col = pos % 9;
	block = (line / 3) * 3 + (col / 3);
	i = 0;
	while (i < 81)
	{
		if (((i / 9) / 3) * 3 + (i % 9) / 3 == block && tab[i] == val)
			return (1);
		i++;
	}
	return (0);
}

/*
void	ft_fill_blocks(int **dest, int *line)
{
	int 	block;
	int		i;
	int		j;

	block = 0;
	while (block < 9)
	{
		i = 0;
		while (i < 3)
		{
			j = 0;
			while (j < 3)
			{
				dest[block][i * 3 + j] = line[3 * block + 18 * (block / 3) + j + 9 * i];
				j++;
			}
			i++;
		}
		block++;
	}
}


int		**ft_ltom(int	*line)
{
	int		**dest;

	dest = ft_create_matrix(27, 9);
	ft_fill_lines(dest, line);
	ft_fill_cols(dest + 9, line);
	ft_fill_blocks(dest + 18, line);
	return (dest);
}

int		ft_dup_in_tab(int *tab)
{
	int i;
	int j;

	i = 0;
	while (i < 8)
	{
		j = i + 1;
		while (j < 9)
		{
			if ((tab[i] == tab[j]) && tab[i] != 0)
				return (1);
			j++;
		}
		i++;
	}
	return (0);
}

int		ft_dup_m(int **matrix)
{
	int i;
	
	i = 0;
	while (i < 27)
	{
		if (ft_dup_in_tab(matrix[i]) == 1)
		{
	//		ft_putstr("duplicate in line:");
	//		ft_putnbr(i);
	//		ft_putchar('\n');
			return (1);
		}
		i++;
	}
	return (0);
}

int		*ft_tabdup(int *src, int length)
{
	int i;
	int	*dest;

	dest = (int *)malloc(length * sizeof(int));
	i = 0;
	while (i < length)
	{
		dest[i] = src[i];
		i++;
	}
	return (dest);
}
*/


int		*ft_rec_inc(int	*line)
{
	int i;
	int	j;
	int *copy;

	ft_print_sudoku(line);
	ft_putchar('\n');
	if (ft_dup_m(ft_ltom(line)) == 1)
		return (0);
	i = 0;
	while (i < 81)
	{
		if (line[i] != 0)
			i++;
		else
		{
			copy = ft_tabdup(line, 81);
			j = 1;
			while (j <= 9)
			{
				copy[i] = j;
				if (ft_rec_inc(copy) == 0)
					j++;
				else
					return (ft_rec_inc(copy));
			}
		}
	}
		return (line);
}


int		main(int argc, char **argv)
{

	if (ft_valid_params(argc, argv) == 0)
		ft_putstr("Erreur\n");
	else if (ft_dup_m(ft_ltom(ft_argstol(argv))) == 1)
		ft_putstr("Erreur\n");
	else
		ft_print_sudoku(ft_rec_inc(ft_argstol(argv)));
	return (0);
}
